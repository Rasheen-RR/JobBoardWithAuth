// <auto-generated />
using System;
using JobBoard.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace JobBoardWithAuth.Migrations
{
    [DbContext(typeof(JobBoardContext))]
    [Migration("20210407202755_changed-models-employer")]
    partial class changedmodelsemployer
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("JobBoard.Models.Candidate", b =>
                {
                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Email");

                    b.ToTable("Candidate");
                });

            modelBuilder.Entity("JobBoard.Models.Education", b =>
                {
                    b.Property<int>("EducationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("EducationType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ResumeEmail")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("SchoolName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("EducationId");

                    b.HasIndex("ResumeEmail");

                    b.ToTable("Education");
                });

            modelBuilder.Entity("JobBoard.Models.Employer", b =>
                {
                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CompanyName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("isActive")
                        .HasColumnType("bit");

                    b.HasKey("Email");

                    b.ToTable("Employer");
                });

            modelBuilder.Entity("JobBoard.Models.Experience", b =>
                {
                    b.Property<int>("ExperienceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CompanyName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Position")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ResumeEmail")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("WorkDone")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ExperienceId");

                    b.HasIndex("ResumeEmail");

                    b.ToTable("Experience");
                });

            modelBuilder.Entity("JobBoard.Models.JobApplication", b =>
                {
                    b.Property<Guid>("JobApplicationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("JobId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("applicantId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("candidateEmail")
                        .HasColumnType("nvarchar(450)");

                    b.Property<Guid?>("jobPostingJobId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("JobApplicationId");

                    b.HasIndex("candidateEmail");

                    b.HasIndex("jobPostingJobId");

                    b.ToTable("JobApplication");
                });

            modelBuilder.Entity("JobBoard.Models.JobPosting", b =>
                {
                    b.Property<Guid>("JobId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmployerEmail")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDraft")
                        .HasColumnType("bit");

                    b.Property<bool>("IsPublic")
                        .HasColumnType("bit");

                    b.Property<string>("JobFunction")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("OwnerId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Qualifications")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Requirement")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Responsibilities")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Skills")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("JobId");

                    b.HasIndex("EmployerEmail");

                    b.ToTable("JobPosting");
                });

            modelBuilder.Entity("JobBoard.Models.Notification", b =>
                {
                    b.Property<int>("NotificationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CandidateId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CompanyId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Message")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("NotificationId");

                    b.HasIndex("CandidateId");

                    b.ToTable("Notification");
                });

            modelBuilder.Entity("JobBoard.Models.Resume", b =>
                {
                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CoverLetter")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Email");

                    b.ToTable("Resume");
                });

            modelBuilder.Entity("JobBoard.Models.SavedSearch", b =>
                {
                    b.Property<int>("SaveId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CandidateEmail")
                        .HasColumnType("nvarchar(450)");

                    b.Property<Guid>("CandidateId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("JobId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("SaveId");

                    b.HasIndex("CandidateEmail");

                    b.HasIndex("JobId");

                    b.ToTable("SavedSearch");
                });

            modelBuilder.Entity("JobBoard.Models.Education", b =>
                {
                    b.HasOne("JobBoard.Models.Resume", null)
                        .WithMany("education")
                        .HasForeignKey("ResumeEmail");
                });

            modelBuilder.Entity("JobBoard.Models.Experience", b =>
                {
                    b.HasOne("JobBoard.Models.Resume", null)
                        .WithMany("experience")
                        .HasForeignKey("ResumeEmail");
                });

            modelBuilder.Entity("JobBoard.Models.JobApplication", b =>
                {
                    b.HasOne("JobBoard.Models.Candidate", "candidate")
                        .WithMany()
                        .HasForeignKey("candidateEmail");

                    b.HasOne("JobBoard.Models.JobPosting", "jobPosting")
                        .WithMany()
                        .HasForeignKey("jobPostingJobId");
                });

            modelBuilder.Entity("JobBoard.Models.JobPosting", b =>
                {
                    b.HasOne("JobBoard.Models.Employer", null)
                        .WithMany("JobPost")
                        .HasForeignKey("EmployerEmail");
                });

            modelBuilder.Entity("JobBoard.Models.Notification", b =>
                {
                    b.HasOne("JobBoard.Models.Candidate", "Candidate")
                        .WithMany()
                        .HasForeignKey("CandidateId");
                });

            modelBuilder.Entity("JobBoard.Models.SavedSearch", b =>
                {
                    b.HasOne("JobBoard.Models.Candidate", "Candidate")
                        .WithMany()
                        .HasForeignKey("CandidateEmail");

                    b.HasOne("JobBoard.Models.JobPosting", "job")
                        .WithMany()
                        .HasForeignKey("JobId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
